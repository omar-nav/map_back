{"version":3,"sources":["components/auth/Signup.js","components/auth/Login.js","components/auth/Profile.js","Routes.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Signup","state","signup","username","loading","onChange","e","field","target","name","value","_this","setState","createUser","preventDefault","password","password2","toastr","error","axios","post","then","user","console","log","success","catch","_this$state","this","react_default","a","createElement","onSubmit","style","width","margin","padding","input","type","placeholder","email","es_button","htmlType","Component","url","Login","auth","login","res","localStorage","setItem","JSON","stringify","data","token","props","history","push","Profile","getPrivateInfo","get","headers","Authorization","getItem","message","parse","borderRadius","src","photoURL","logo","alt","onClick","Routes","Switch","Route","path","component","App","className","src_Routes","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"oQAkFeA,6MA3EXC,MAAQ,CACJC,OAAO,CAACC,SAAS,aACjBC,SAAQ,KAGZC,SAAW,SAACC,GACR,IAAMC,EAAQD,EAAEE,OAAOC,KACjBC,EAAQJ,EAAEE,OAAOE,MAChBR,EAAUS,EAAKV,MAAfC,OACPA,EAAOK,GAASG,EAChBC,EAAKC,SAAS,CAACV,cAGnBW,WAAa,SAACP,GACVA,EAAEQ,iBADc,IAETZ,EAAUS,EAAKV,MAAfC,OACP,GAAGA,EAAOa,WAAab,EAAOc,UAC1B,OAAOC,IAAOC,MAAM,sBAExBC,IAAMC,KAAK,+BAAgClB,GAC1CmB,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZL,IAAOQ,QAAQ,sBAElBC,MAAM,SAAApB,GAAC,OAAEW,IAAOC,MAAM,wFAGnB,IAAAS,EACsBC,KAAK3B,MAAxBC,EADHyB,EACGzB,OAAQE,EADXuB,EACWvB,QACf,OACIyB,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,KAAKf,WAAYoB,MAAO,CAACC,MAAM,IAAKC,OAAO,SAAUC,QAAQ,KACzEP,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI5B,KAAK,WACL6B,KAAK,OACLjC,SAAUuB,KAAKvB,SACfK,MAAOR,EAAOC,SACdoC,YAAY,0BAIpBV,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI5B,KAAK,QACL6B,KAAK,QACLjC,SAAUuB,KAAKvB,SACfK,MAAOR,EAAOsC,MACdD,YAAY,eAGhBV,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI5B,KAAK,WACL6B,KAAK,WACLjC,SAAUuB,KAAKvB,SACfK,MAAOR,EAAOa,SACdwB,YAAY,iBAGhBV,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI5B,KAAK,YACL6B,KAAK,WACLjC,SAAUuB,KAAKvB,SACfK,MAAOR,EAAOc,UACduB,YAAY,wBAGhBV,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQrC,QAASA,EAASkC,KAAK,UAAUI,SAAS,UAAlD,uBAvEKC,aCAfC,EAAM,8BAoEGC,6MAhEX5C,MAAQ,CACJ6C,KAAK,GACL1C,SAAQ,KAGZ2C,MAAQ,SAACzC,GACLK,EAAKC,SAAS,CAACR,SAAQ,IACvBE,EAAEQ,iBAFS,IAGJgC,EAAQnC,EAAKV,MAAb6C,KACP3B,IAAMC,KAAKwB,EAAKE,GACfzB,KAAK,SAAA2B,GACFzB,QAAQC,IAAIwB,GACZ/B,IAAOQ,QAAQ,gBACfwB,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,EAAIK,KAAK/B,OACrD2B,aAAaC,QAAQ,QAASF,EAAIK,KAAKC,OACvC3C,EAAKC,SAAS,CAACR,SAAQ,IACRO,EAAK4C,MAAMC,QACnBC,KAAK,cAGf/B,MAAM,SAAApB,GACHW,IAAOC,MAAM,0BACbP,EAAKC,SAAS,CAACR,SAAQ,SAK/BC,SAAW,SAACC,GACR,IAAMC,EAAQD,EAAEE,OAAOC,KACjBC,EAAQJ,EAAEE,OAAOE,MAChBoC,EAAQnC,EAAKV,MAAb6C,KACPA,EAAKvC,GAASG,EACdC,EAAKC,SAAS,CAACkC,kFAGX,IAAAnB,EACoBC,KAAK3B,MAAtB6C,EADHnB,EACGmB,KAAM1C,EADTuB,EACSvB,QACb,OACIyB,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,KAAKmB,MAAOd,MAAO,CAACC,MAAM,IAAKC,OAAO,SAAUC,QAAQ,KACpEP,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI5B,KAAK,QACL6B,KAAK,QACLjC,SAAUuB,KAAKvB,SACfK,MAAOoC,EAAKN,MACZD,YAAY,eAGhBV,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI5B,KAAK,WACL6B,KAAK,WACLjC,SAAUuB,KAAKvB,SACfK,MAAOoC,EAAK/B,SACZwB,YAAY,iBAGhBV,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQrC,QAASA,EAASkC,KAAK,UAAUI,SAAS,UAAlD,4BA5DIC,8BCqCLe,6MApCXzD,MAAQ,CACJqB,KAAK,MASTqC,eAAiB,WACbxC,IAAMyC,IAAI,gCAAiC,CACvCC,QAAQ,CACJC,cAAkBb,aAAac,QAAQ,YAG9C1C,KAAK,SAAA2B,GACFzB,QAAQC,IAAIwB,KAEftB,MAAM,SAAApB,GAAC,OAAEW,IAAOC,MAAM,gBAAcZ,EAAE0D,gGAdvC,IAAM1C,EAAO6B,KAAKc,MAAMhB,aAAac,QAAQ,SAC7C,IAAIzC,EAAM,OAAOM,KAAK2B,MAAMC,QAAQC,KAAK,UACzC7B,KAAKhB,SAAS,CAACU,0CAeX,IACGA,EAAQM,KAAK3B,MAAbqB,KACP,OACIO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACiC,aAAa,OAAQC,IAAK7C,EAAK8C,UAAYC,IAAMnC,MAAM,MAAMoC,IAAI,SAC9EzC,EAAAC,EAAAC,cAAA,UAAKT,EAAKnB,UACV0B,EAAAC,EAAAC,cAAA,SAAIT,EAAKkB,OACTX,EAAAC,EAAAC,cAAA,UAAQwC,QAAS3C,KAAK+B,gBAAtB,qCA/BMhB,aCUP6B,EAVA,WACX,OACI3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACI5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAW5E,IACjC6B,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW/B,IAChChB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWlB,MCG/BmB,mLARX,OACEhD,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,OACbjD,EAAAC,EAAAC,cAACgD,EAAD,cAJUpC,aCMEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sFCLNC,IAASC,OAAOzD,EAAAC,EAAAC,cAFG,kBAAMF,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KAAe1D,EAAAC,EAAAC,cAACyD,EAAD,QAExB,MAAgBC,SAASC,eAAe,SD8GlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxE,KAAK,SAAAyE,GACjCA,EAAaC,mCE3HnBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.aba6c011.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport { Input, Button } from 'antd'\nimport toastr from 'toastr'\nimport axios from 'axios'\n\nclass Signup extends Component{\n\n    state = {\n        signup:{username:\"pollollon\"},\n        loading:false\n    }\n\n    onChange = (e) => {\n        const field = e.target.name\n        const value = e.target.value\n        const {signup} = this.state\n        signup[field] = value\n        this.setState({signup})\n    }\n\n    createUser = (e) => {\n        e.preventDefault()\n        const {signup} = this.state\n        if(signup.password !== signup.password2) {\n            return toastr.error('Escribe bien hijo!')\n        }\n        axios.post('http://localhost:3000/signup', signup)\n        .then(user=>{\n            console.log(user)\n            toastr.success(\"hey! lo lograte!\")\n        })\n        .catch(e=>toastr.error(\"No pitufa\"))\n    }\n\n    render(){\n        const {signup, loading} = this.state\n        return(\n            <form onSubmit={this.createUser} style={{width:600, margin:\"0 auto\", padding:20}}>\n                <h2>Date de alta mijo</h2>\n                <p>\n                    <Input \n                        name=\"username\"\n                        type=\"text\"\n                        onChange={this.onChange}\n                        value={signup.username}\n                        placeholder=\"Tu nombre de usuario\" \n                    />\n                    \n                </p>\n                <p>\n                <Input \n                    name=\"email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={signup.email}\n                    placeholder=\"Tu correo\" \n                    />    \n                </p> \n                <p>\n                <Input \n                    name=\"password\"\n                    type=\"password\"\n                    onChange={this.onChange}\n                    value={signup.password}\n                    placeholder=\"Tu Password\" \n                    />    \n                </p>  \n                <p>\n                <Input \n                    name=\"password2\"\n                    type=\"password\"\n                    onChange={this.onChange}\n                    value={signup.password2}\n                    placeholder=\"Repite tu Password\" \n                    />    \n                </p>   \n                <Button loading={loading} type=\"primary\" htmlType=\"submit\" >Registrarme</Button>\n            </form>\n        )\n    }\n}\n\nexport default Signup","import React, {Component} from 'react'\nimport {Input, Button} from 'antd'\nimport axios from 'axios'\nimport toastr from 'toastr'\n\nconst url = 'http://localhost:3000/login'\n\nclass Login extends Component{\n\n    state = {\n        auth:{},\n        loading:false\n    }\n\n    login = (e) => {\n        this.setState({loading:true})\n        e.preventDefault()\n        const {auth} = this.state\n        axios.post(url, auth)\n        .then(res=>{\n            console.log(res)\n            toastr.success(\"Te logueate!\")\n            localStorage.setItem('user', JSON.stringify(res.data.user))\n            localStorage.setItem('token', res.data.token)\n            this.setState({loading:false})\n            const bonito = this.props.history\n            bonito.push('/profile')\n\n        })\n        .catch(e=>{\n            toastr.error(\"no quiero tu cochinada\")\n            this.setState({loading:false})\n            \n        })\n    }\n\n    onChange = (e) => {\n        const field = e.target.name\n        const value = e.target.value\n        const {auth} = this.state\n        auth[field] = value\n        this.setState({auth})\n    }\n\n    render(){\n        const {auth, loading} = this.state\n        return(\n            <form onSubmit={this.login} style={{width:600, margin:\"0 auto\", padding:20}}>\n                <h2>Inicia sesión mijo</h2>\n                <p>\n                <Input \n                    name=\"email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={auth.email}\n                    placeholder=\"Tu correo\" \n                    />    \n                </p> \n                <p>\n                <Input \n                    name=\"password\"\n                    type=\"password\"\n                    onChange={this.onChange}\n                    value={auth.password}\n                    placeholder=\"Tu Password\" \n                    />    \n                </p>   \n                <Button loading={loading} type=\"primary\" htmlType=\"submit\" >Inicia sesión</Button>\n            </form>\n        )\n    }\n}\n\nexport default Login","import React, {Component} from 'react'\nimport logo from '../../logo.svg'\nimport axios from 'axios'\nimport toastr from 'toastr'\n\n\nclass Profile extends Component{\n\n    state = {\n        user:{}\n    }\n\n    componentWillMount(){\n        const user = JSON.parse(localStorage.getItem('user'))\n        if(!user) return this.props.history.push('/login')\n        this.setState({user})\n    }\n\n    getPrivateInfo = () => {\n        axios.get('http://localhost:3000/private', {\n            headers:{\n                \"Authorization\" : localStorage.getItem('token') \n            }\n        })\n        .then(res=>{\n            console.log(res)\n        })\n        .catch(e=>toastr.error(\"algo falló\", e.message))\n    }\n\n    render(){\n        const {user} = this.state\n        return(\n            <div>\n                <img style={{borderRadius:'50%'}} src={user.photoURL || logo} width=\"200\" alt=\"user\"/>\n                <h1>{user.username}</h1>\n                <p>{user.email}</p>\n                <button onClick={this.getPrivateInfo} >Bajate mi pack privado ;)</button>\n\n            </div>\n        )\n    }\n}\n\nexport default Profile","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Profile from './components/auth/Profile';\n\nconst Routes = () => {\n    return(\n        <Switch>\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/profile\" component={Profile} />\n        </Switch>\n    )\n}\n\nexport default Routes","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from './Routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Routes/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport 'antd/dist/antd.css'\nimport 'toastr/build/toastr.css'\n\nconst WithRouter = () => <BrowserRouter><App/></BrowserRouter>\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}